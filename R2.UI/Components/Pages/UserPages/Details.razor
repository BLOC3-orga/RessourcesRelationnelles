@page "/users/details"
@using Microsoft.EntityFrameworkCore
@using R2.Data.Entities
@inject IDbContextFactory<R2.Data.Context.R2DbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>User</h2>
    <hr />
    @if (user is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@user.Name</dd>
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@user.LastName</dd>
            <dt class="col-sm-2">Pseudo</dt>
            <dd class="col-sm-10">@user.Pseudo</dd>
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@user.City</dd>
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@user.Address</dd>
            <dt class="col-sm-2">IsAccountActivated</dt>
            <dd class="col-sm-10">@user.IsAccountActivated</dd>
            <dt class="col-sm-2">UserName</dt>
            <dd class="col-sm-10">@user.UserName</dd>
            <dt class="col-sm-2">NormalizedUserName</dt>
            <dd class="col-sm-10">@user.NormalizedUserName</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@user.Email</dd>
            <dt class="col-sm-2">NormalizedEmail</dt>
            <dd class="col-sm-10">@user.NormalizedEmail</dd>
            <dt class="col-sm-2">EmailConfirmed</dt>
            <dd class="col-sm-10">@user.EmailConfirmed</dd>
            <dt class="col-sm-2">PasswordHash</dt>
            <dd class="col-sm-10">@user.PasswordHash</dd>
            <dt class="col-sm-2">SecurityStamp</dt>
            <dd class="col-sm-10">@user.SecurityStamp</dd>
            <dt class="col-sm-2">ConcurrencyStamp</dt>
            <dd class="col-sm-10">@user.ConcurrencyStamp</dd>
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@user.PhoneNumber</dd>
            <dt class="col-sm-2">PhoneNumberConfirmed</dt>
            <dd class="col-sm-10">@user.PhoneNumberConfirmed</dd>
            <dt class="col-sm-2">TwoFactorEnabled</dt>
            <dd class="col-sm-10">@user.TwoFactorEnabled</dd>
            <dt class="col-sm-2">LockoutEnd</dt>
            <dd class="col-sm-10">@user.LockoutEnd</dd>
            <dt class="col-sm-2">LockoutEnabled</dt>
            <dd class="col-sm-10">@user.LockoutEnabled</dd>
            <dt class="col-sm-2">AccessFailedCount</dt>
            <dd class="col-sm-10">@user.AccessFailedCount</dd>
        </dl>
        <div>
            <a href="@($"/users/edit?id={user.Id}")">Edit</a> |
            <a href="@($"/users")">Back to List</a>
        </div>
    }
</div>

@code {
    private User? user;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        user = await context.Users.FirstOrDefaultAsync(m => m.Id == Id);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
