@page "/login"
@using Microsoft.AspNetCore.Identity
@using R2.Data.Entities
@using System.ComponentModel.DataAnnotations
@inject SignInManager<User> SignInManager
@inject NavigationManager NavigationManager

<PageTitle>Connexion</PageTitle>

<h1>Se connecter</h1>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@loginModel" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="form-group mb-3">
                <label for="password">Mot de passe</label>
                <InputText id="password" @bind-Value="loginModel.Password" class="form-control" type="password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <div class="form-group mb-3">
                <div class="form-check">
                    <InputCheckbox id="rememberMe" @bind-Value="loginModel.RememberMe" class="form-check-input" />
                    <label class="form-check-label" for="rememberMe">Se souvenir de moi</label>
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Se connecter</button>
        </EditForm>

        <div class="mt-3">
            <p>Vous n'avez pas de compte? <a href="register">S'inscrire</a></p>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">
                @errorMessage
            </div>
        }
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;

    private class LoginModel
    {
        [Required(ErrorMessage = "L'adresse email est requise")]
        [EmailAddress(ErrorMessage = "Format d'email invalide")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Le mot de passe est requis")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = string.Empty;

        public bool RememberMe { get; set; }
    }

    private async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(loginModel.Email, loginModel.Password, loginModel.RememberMe, lockoutOnFailure: false);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Tentative de connexion invalide. Vérifiez votre email et mot de passe.";
        }
    }
}